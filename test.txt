using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Net.Http;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;

namespace TestHttpClient
{
    class Program
    {
        static void Main(string[] args)
        {
            Task t = new Task(DownloadPageAsync);
            t.Start();
            Console.WriteLine("Downloading page...");
            Console.ReadLine();
        }

        static async void DownloadPageAsync()
        {
                       // ... Use HttpClient.
            var client = new HttpClient();
            string cookie = await GetCookie(client);
            Login(client, cookie);
        }

        private static async void AddCart(HttpClient client, string cookie, FormUrlEncodedContent param)
        {
            Thread.Sleep(5000);
            var response1 = await client.PostAsync("https://edepart.omni7.jp/addcart/OP_OSA0020_002_22Action.do", param);
            var content1 = response1.Content;
            // ... Read the string.
            string result1 = await content1.ReadAsStringAsync();

            // ... Display the result.
            if (result1 != null)
            {
                Reserve(client, cookie, result1);
            }
        }

        private static async void PickItem(HttpClient client, string cookie)
        {
            Thread.Sleep(5000);
            var response = await client.GetAsync("https://edepart.omni7.jp/detail/00100250499999762349");
            var content = response.Content;
            // ... Read the string.
            string result = await content.ReadAsStringAsync();
            result = result.Replace("\n", "[ESCAPE]");
            var pattern1 = ".form name=.OP_OSA0020_002_22Form.(.*).form.";
            Regex r1 = new Regex(pattern1, RegexOptions.IgnoreCase);
            var m1 = r1.Match(result);
            var text2 = m1.Groups[0].ToString().Replace("[ESCAPE]", "\r\n");
            var pattern2 = "(.input type=.hidden.){1}.*(.>)";
            Regex r2 = new Regex(pattern2, RegexOptions.IgnoreCase);
            var m2 = r2.Matches(text2);
            FormUrlEncodedContent param1 = null;
            var dic = new Dictionary<string, string>();
            foreach (var a in m2)
            {
                Debug.WriteLine(a);
                var pattern3 = "(name=\".*\").?(value=\".*\")";
                Regex r3 = new Regex(pattern3, RegexOptions.IgnoreCase);
                var m3 = r3.Match(a.ToString());
                Debug.WriteLine(m3.Groups[0]);
                if (m3.Groups.Count == 1)
                {
                    continue;
                }
                dic.Add(m3.Groups[1].ToString().Replace("\"", "").Split('=')[1], m3.Groups[2].ToString().Replace("\"", "").Split('=')[1]);
            }
            dic.Add("addCartEntity.addCartGoodsInfoList[0].buyCnt", "1");
            param1 = new FormUrlEncodedContent(dic);
            param1.Headers.Add("Cookie", cookie);

            AddCart(client, cookie, param1);
        }

        private static async void Reserve(HttpClient client, string cookie, string result)
        {
            File.WriteAllText(@"C:\Users\tikK67006\Desktop\c.txt", result);
            FormUrlEncodedContent param1 = null;
            // ... Display the result.
            if (result != null)
            {
                result = result.Replace("\n", "[ESCAPE]");
                var pattern1 = ".form name=.OP_OSE0000_001_01Form.(.*).form.";
                Regex r1 = new Regex(pattern1, RegexOptions.IgnoreCase);
                var m1 = r1.Match(result);
                var text2 = m1.Groups[0].ToString().Replace("[ESCAPE]", "\r\n");
                var pattern2 = "(.input type=.hidden.){1}.*(.>)";
                Regex r2 = new Regex(pattern2, RegexOptions.IgnoreCase);
                var m2 = r2.Matches(text2);
                var dic = new Dictionary<string, string>();
                foreach (var a in m2)
                {
                    //Debug.WriteLine(a);
                    var pattern3 = "(name=\".*\").?(value=\".*\")";
                    Regex r3 = new Regex(pattern3, RegexOptions.IgnoreCase);
                    var m3 = r3.Match(a.ToString());
                    if (m3.Groups.Count == 1)
                    {
                        continue;
                    }
                    dic.Add(m3.Groups[1].ToString().Replace("\"", "").Split('=')[1], m3.Groups[2].ToString().Replace("\"", "").Split('=')[1]);
                }
                dic["toOrder"] = "toOrder";
                dic.Add("qtyChangeDataBean[0].qty", "2");
                param1 = new FormUrlEncodedContent(dic);
                param1.Headers.Add("Cookie", cookie);
            }

            var response1 = await client.PostAsync("https://www.omni7.jp/cart/OP_OSE0000_001_01.do", param1);
            var content1 = response1.Content;
            // ... Read the string.
            string result1 = await content1.ReadAsStringAsync();

            // ... Display the result.
            if (result1 != null)
            {
                File.WriteAllText(@"C:\Users\tikK67006\Desktop\b.txt", result1);
            }
        }

        private static async void Login(HttpClient client, string cookie)
        {
            Thread.Sleep(5000);
            var param = new FormUrlEncodedContent(new Dictionary<string, string>
            {
                { "login", "ksd523288@gmail.com" },
                { "password", "knight123" }
            });
            param.Headers.Add("Cookie", cookie);

            var response = await client.PostAsync("https://www.omni7.jp/account/OP_OSD0010_001_02.do", param);
            var content = response.Content;

            // ... Read the string.
            string result = await content.ReadAsStringAsync();

            // ... Display the result.
            if (result != null)
            {
                Console.WriteLine("OK");
            }
            PickItem(client, cookie);
        }

        private static async Task<string> GetCookie(HttpClient client)
        {
            // ... Target page.
            string page = "https://www.omni7.jp/account/login";
            var response = await client.GetAsync(page);
            var content = response.Content;
            // ... Read the string.
            string result = await content.ReadAsStringAsync();

            string cookie = null;

            // ... Display the result.
            if (result != null)
            {
                cookie = response.Headers.GetValues("Set-Cookie").First();
                //Console.WriteLine(result);
                var pattern = "(<form).*[OP_OSD0010_001_02.do]{1}.*";
                Regex r = new Regex(pattern, RegexOptions.IgnoreCase);
                Match m = r.Match(result);
                Debug.WriteLine(m.Groups[0]);
            }

            return cookie;
        }
    }
}
